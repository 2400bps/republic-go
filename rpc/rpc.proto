syntax = "proto3";

package rpc;

// Node services implement the core functionality of the overlay network,
// responsible for routing messages.
service Node {
  
  // Ping the connection and swap MultiAddresses.
  rpc Ping (MultiAddress) returns (MultiAddress);

  // Get all peers connected to the Node.
  rpc Peers (Nothing) returns (MultiAddresses);

  // Send an order fragment to some target Node.
  rpc SendOrderFragment (OrderFragment) returns (Nothing);
}

// An OrderFragment is a message contains the details of an order fragment.
message OrderFragment {
  string to = 1;
  bytes orderID = 2;
  bytes orderFragmentID = 3;
  bytes orderFragment = 4;
}

// A MultiAddress is the public multiaddress of a Node in the overlay network.
// It provides the Republic address of the Node, as well as the network
// address.
message MultiAddress {
  string multi = 1;
}

// MultiAddresses are public multiaddress of multiple Nodes in the overlay
// network.
message MultiAddresses {
  repeated MultiAddress multis = 1;
}

// Nothing is in this message. It is used to send nothing, or signal a
// successful response.
message Nothing {}
syntax = "proto3";

package rpc;

// DHT services provide peer-to-peer discovery.
service DHT {
  
  // Ping the Node to test the connection.
  rpc Ping (Node) returns (Node);

  // Get peers connected to the Node.
  rpc Peers (Node) returns (MultiAddresses);

  // CloserPeers peers that are closer to the target than the Node.
  // It will return the multiaddress of the target node if target
  // is known to the server.
  rpc CloserPeers (Path) returns (MultiAddresses);

  // Send order fragment to other node
  rpc Send(Fragment) returns (Nothing);
}

// Node is the public address of an entity in the overlay network. It contains
// connection details for the entity
message Node {
  string address = 1;
  string ip = 2;
  string port = 3;
}

// Fragment is the order fragment we passed in the overlay network
message Fragment{
  string data = 1;
}

// Path messages represent a sender attempting to reach a target. Both the
// sender and the target are represented by an ID.
message Path {
  Node from = 1;
  string to = 2;
}

// MultiAddress messages contain the public multiaddress of a Node in the
// overlay network.
message MultiAddress {
  string multi = 1;
}

// MultiAddresses messages contain the public multiaddress of multiple Nodes in
// the overlay network.
message MultiAddresses {
  repeated string multis = 1;
}

// Nothing messages are empty.
message Nothing {}